window.esdocSearchIndex = [
  [
    "builtinexternal/ecmascriptexternal.js~array",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Array",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~arraybuffer",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~boolean",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~dataview",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~date",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Date",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~error",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Error",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~evalerror",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~float32array",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~float64array",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~function",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Function",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~generator",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~generatorfunction",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~infinity",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~int16array",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~int32array",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~int8array",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~internalerror",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~json",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~map",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Map",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~nan",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~number",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Number",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~object",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Object",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~promise",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~proxy",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~rangeerror",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~referenceerror",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~reflect",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~regexp",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~set",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Set",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~string",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~String",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~symbol",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~syntaxerror",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~typeerror",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~urierror",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~uint16array",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~uint32array",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~uint8array",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~uint8clampedarray",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~weakmap",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~weakset",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~boolean",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~function",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~function",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~null",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~null",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~number",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~number",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~object",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~object",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~string",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~string",
    "external"
  ],
  [
    "builtinexternal/ecmascriptexternal.js~undefined",
    "external/index.html",
    "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "external"
  ],
  [
    "builtinexternal/webapiexternal.js~audiocontext",
    "external/index.html",
    "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "external"
  ],
  [
    "builtinexternal/webapiexternal.js~canvasrenderingcontext2d",
    "external/index.html",
    "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "external"
  ],
  [
    "builtinexternal/webapiexternal.js~documentfragment",
    "external/index.html",
    "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "external"
  ],
  [
    "builtinexternal/webapiexternal.js~element",
    "external/index.html",
    "BuiltinExternal/WebAPIExternal.js~Element",
    "external"
  ],
  [
    "builtinexternal/webapiexternal.js~event",
    "external/index.html",
    "BuiltinExternal/WebAPIExternal.js~Event",
    "external"
  ],
  [
    "builtinexternal/webapiexternal.js~node",
    "external/index.html",
    "BuiltinExternal/WebAPIExternal.js~Node",
    "external"
  ],
  [
    "builtinexternal/webapiexternal.js~nodelist",
    "external/index.html",
    "BuiltinExternal/WebAPIExternal.js~NodeList",
    "external"
  ],
  [
    "builtinexternal/webapiexternal.js~xmlhttprequest",
    "external/index.html",
    "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "external"
  ],
  [
    "compose compose,compose",
    "test-file/test/compose.spec.ts.html#lineNumber5",
    "compose",
    "test"
  ],
  [
    "",
    "test-file/test/compose.spec.ts.html#lineNumber14",
    "compose should be able to compose three functions",
    "test"
  ],
  [
    "",
    "test-file/test/compose.spec.ts.html#lineNumber6",
    "compose should return a function",
    "test"
  ],
  [
    "concat concat,concat",
    "test-file/test/concat.spec.ts.html#lineNumber6",
    "concat",
    "test"
  ],
  [
    "",
    "test-file/test/concat.spec.ts.html#lineNumber7",
    "concat should concatenation all the elements of a list",
    "test"
  ],
  [
    "concatmap concatmap,concatmap",
    "test-file/test/concatMap.spec.ts.html#lineNumber6",
    "concatMap",
    "test"
  ],
  [
    "",
    "test-file/test/concatMap.spec.ts.html#lineNumber7",
    "concatMap should apply the function on all the elements and concatenate it",
    "test"
  ],
  [
    "curry curry,curry",
    "test-file/test/curry.spec.ts.html#lineNumber5",
    "curry",
    "test"
  ],
  [
    "",
    "test-file/test/curry.spec.ts.html#lineNumber6",
    "curry should return a curried function",
    "test"
  ],
  [
    "",
    "test-file/test/curry.spec.ts.html#lineNumber13",
    "curry should return another curried function",
    "test"
  ],
  [
    "dropwhile dropwhile,dropwhile",
    "test-file/test/dropWhile.spec.ts.html#lineNumber5",
    "dropWhile",
    "test"
  ],
  [
    "",
    "test-file/test/dropWhile.spec.ts.html#lineNumber6",
    "dropWhile should return the suffix remaining after takeWhile",
    "test"
  ],
  [
    "flip flip,flip",
    "test-file/test/flip.spec.ts.html#lineNumber5",
    "flip",
    "test"
  ],
  [
    "",
    "test-file/test/flip.spec.ts.html#lineNumber6",
    "flip should reverse the arguments",
    "test"
  ],
  [
    "foldl foldl,foldl",
    "test-file/test/foldl.spec.ts.html#lineNumber5",
    "foldl",
    "test"
  ],
  [
    "",
    "test-file/test/foldl.spec.ts.html#lineNumber6",
    "foldl should apply the provided function",
    "test"
  ],
  [
    "head head,head",
    "test-file/test/head.spec.ts.html#lineNumber5",
    "head",
    "test"
  ],
  [
    "",
    "test-file/test/head.spec.ts.html#lineNumber6",
    "head should return the head of a list",
    "test"
  ],
  [
    "",
    "test-file/test/head.spec.ts.html#lineNumber16",
    "head should return the head of a string",
    "test"
  ],
  [
    "",
    "test-file/test/head.spec.ts.html#lineNumber12",
    "head should return undefined on an empty list",
    "test"
  ],
  [
    "",
    "test-file/test/head.spec.ts.html#lineNumber22",
    "head should return undefined on an empty string",
    "test"
  ],
  [
    "init init,init",
    "test-file/test/init.spec.ts.html#lineNumber6",
    "init",
    "test"
  ],
  [
    "",
    "test-file/test/init.spec.ts.html#lineNumber7",
    "init should return all the elements of a list except the last one",
    "test"
  ],
  [
    "",
    "test-file/test/init.spec.ts.html#lineNumber18",
    "init should return all the elements of a list except the last one of a string",
    "test"
  ],
  [
    "",
    "test-file/test/init.spec.ts.html#lineNumber14",
    "init should return undefined on an empty list",
    "test"
  ],
  [
    "",
    "test-file/test/init.spec.ts.html#lineNumber24",
    "init should return undefined on an empty string",
    "test"
  ],
  [
    "intersperse intersperse,intersperse",
    "test-file/test/intersperse.spec.ts.html#lineNumber5",
    "intersperse",
    "test"
  ],
  [
    "",
    "test-file/test/intersperse.spec.ts.html#lineNumber6",
    "intersperse should intersperse a element in a list",
    "test"
  ],
  [
    "",
    "test-file/test/intersperse.spec.ts.html#lineNumber11",
    "intersperse should intersperse a element in a string",
    "test"
  ],
  [
    "last last,last",
    "test-file/test/last.spec.ts.html#lineNumber5",
    "last",
    "test"
  ],
  [
    "",
    "test-file/test/last.spec.ts.html#lineNumber16",
    "last should return the last character of a string",
    "test"
  ],
  [
    "",
    "test-file/test/last.spec.ts.html#lineNumber6",
    "last should return the last element of a list",
    "test"
  ],
  [
    "",
    "test-file/test/last.spec.ts.html#lineNumber12",
    "last should return undefined on an empty list",
    "test"
  ],
  [
    "",
    "test-file/test/last.spec.ts.html#lineNumber22",
    "last should return undefined on an empty string",
    "test"
  ],
  [
    "lib/compose.js",
    "file/lib/compose.js.html",
    "lib/compose.js",
    "file"
  ],
  [
    "lib/concat.js",
    "file/lib/concat.js.html",
    "lib/concat.js",
    "file"
  ],
  [
    "lib/concatmap.js",
    "file/lib/concatMap.js.html",
    "lib/concatMap.js",
    "file"
  ],
  [
    "lib/curry.js",
    "file/lib/curry.js.html",
    "lib/curry.js",
    "file"
  ],
  [
    "lib/curryn.js",
    "file/lib/curryN.js.html",
    "lib/curryN.js",
    "file"
  ],
  [
    "lib/dropwhile.js",
    "file/lib/dropWhile.js.html",
    "lib/dropWhile.js",
    "file"
  ],
  [
    "lib/flip.js",
    "file/lib/flip.js.html",
    "lib/flip.js",
    "file"
  ],
  [
    "lib/foldl.js",
    "file/lib/foldl.js.html",
    "lib/foldl.js",
    "file"
  ],
  [
    "lib/head.js",
    "file/lib/head.js.html",
    "lib/head.js",
    "file"
  ],
  [
    "lib/helpers.js",
    "file/lib/helpers.js.html",
    "lib/helpers.js",
    "file"
  ],
  [
    "lib/index.js",
    "file/lib/index.js.html",
    "lib/index.js",
    "file"
  ],
  [
    "lib/init.js",
    "file/lib/init.js.html",
    "lib/init.js",
    "file"
  ],
  [
    "lib/intersperse.js",
    "file/lib/intersperse.js.html",
    "lib/intersperse.js",
    "file"
  ],
  [
    "lib/last.js",
    "file/lib/last.js.html",
    "lib/last.js",
    "file"
  ],
  [
    "lib/maximum.js",
    "file/lib/maximum.js.html",
    "lib/maximum.js",
    "file"
  ],
  [
    "lib/minimum.js",
    "file/lib/minimum.js.html",
    "lib/minimum.js",
    "file"
  ],
  [
    "lib/nullaware.js",
    "file/lib/nullAware.js.html",
    "lib/nullAware.js",
    "file"
  ],
  [
    "lib/product.js",
    "file/lib/product.js.html",
    "lib/product.js",
    "file"
  ],
  [
    "lib/range.js",
    "file/lib/range.js.html",
    "lib/range.js",
    "file"
  ],
  [
    "lib/splitat.js",
    "file/lib/splitAt.js.html",
    "lib/splitAt.js",
    "file"
  ],
  [
    "lib/sum.js",
    "file/lib/sum.js.html",
    "lib/sum.js",
    "file"
  ],
  [
    "lib/tail.js",
    "file/lib/tail.js.html",
    "lib/tail.js",
    "file"
  ],
  [
    "lib/takewhile.js",
    "file/lib/takeWhile.js.html",
    "lib/takeWhile.js",
    "file"
  ],
  [
    "lib/transpose.js",
    "file/lib/transpose.js.html",
    "lib/transpose.js",
    "file"
  ],
  [
    "lib/uncons.js",
    "file/lib/uncons.js.html",
    "lib/uncons.js",
    "file"
  ],
  [
    "lib/zip.js",
    "file/lib/zip.js.html",
    "lib/zip.js",
    "file"
  ],
  [
    "maximum maximum,maximum",
    "test-file/test/maximum.spec.ts.html#lineNumber5",
    "maximum",
    "test"
  ],
  [
    "",
    "test-file/test/maximum.spec.ts.html#lineNumber11",
    "maximum should handle negative numbers",
    "test"
  ],
  [
    "",
    "test-file/test/maximum.spec.ts.html#lineNumber6",
    "maximum should return the largest element",
    "test"
  ],
  [
    "minimum minimum,minimum",
    "test-file/test/minimum.spec.ts.html#lineNumber5",
    "minimum",
    "test"
  ],
  [
    "",
    "test-file/test/minimum.spec.ts.html#lineNumber11",
    "minimum should handle negative numbers",
    "test"
  ],
  [
    "",
    "test-file/test/minimum.spec.ts.html#lineNumber6",
    "minimum should return the lowest element",
    "test"
  ],
  [
    "nullaware nullaware,nullaware",
    "test-file/test/nullAware.spec.ts.html#lineNumber5",
    "nullAware",
    "test"
  ],
  [
    "",
    "test-file/test/nullAware.spec.ts.html#lineNumber18",
    "nullAware should return handle more types than strings",
    "test"
  ],
  [
    "",
    "test-file/test/nullAware.spec.ts.html#lineNumber24",
    "nullAware should return the supposed to be null value if it is not null",
    "test"
  ],
  [
    "",
    "test-file/test/nullAware.spec.ts.html#lineNumber6",
    "nullAware should return value if first parameter is null",
    "test"
  ],
  [
    "",
    "test-file/test/nullAware.spec.ts.html#lineNumber12",
    "nullAware should return value if first parameter is undefined",
    "test"
  ],
  [
    "product product,product",
    "test-file/test/product.spec.ts.html#lineNumber5",
    "product",
    "test"
  ],
  [
    "",
    "test-file/test/product.spec.ts.html#lineNumber16",
    "product should handle negative numbers",
    "test"
  ],
  [
    "",
    "test-file/test/product.spec.ts.html#lineNumber10",
    "product should not remember the state of the accumulator",
    "test"
  ],
  [
    "",
    "test-file/test/product.spec.ts.html#lineNumber6",
    "product should return the product of a list of numbers",
    "test"
  ],
  [
    "range range,range",
    "test-file/test/range.spec.ts.html#lineNumber5",
    "range",
    "test"
  ],
  [
    "",
    "test-file/test/range.spec.ts.html#lineNumber6",
    "range should produce a range between a start and stop",
    "test"
  ],
  [
    "",
    "test-file/test/range.spec.ts.html#lineNumber19",
    "range should produce a range with a given step",
    "test"
  ],
  [
    "",
    "test-file/test/range.spec.ts.html#lineNumber11",
    "range should return an empty list if start is bigger than stop",
    "test"
  ],
  [
    "",
    "test-file/test/range.spec.ts.html#lineNumber15",
    "range should return an empty list if start is equal to stop",
    "test"
  ],
  [
    "splitat splitat,splitat",
    "test-file/test/splitAt.spec.ts.html#lineNumber5",
    "splitAt",
    "test"
  ],
  [
    "",
    "test-file/test/splitAt.spec.ts.html#lineNumber10",
    "splitAt should split a list",
    "test"
  ],
  [
    "",
    "test-file/test/splitAt.spec.ts.html#lineNumber6",
    "splitAt should split a string",
    "test"
  ],
  [
    "",
    "test-file/test/splitAt.spec.ts.html#lineNumber21",
    "splitAt should split on negative position",
    "test"
  ],
  [
    "",
    "test-file/test/splitAt.spec.ts.html#lineNumber17",
    "splitAt should split on zero position",
    "test"
  ],
  [
    "sum sum,sum",
    "test-file/test/sum.spec.ts.html#lineNumber5",
    "sum",
    "test"
  ],
  [
    "",
    "test-file/test/sum.spec.ts.html#lineNumber16",
    "sum should handle negative numbers",
    "test"
  ],
  [
    "",
    "test-file/test/sum.spec.ts.html#lineNumber10",
    "sum should not remember the state of the accumulator",
    "test"
  ],
  [
    "",
    "test-file/test/sum.spec.ts.html#lineNumber6",
    "sum should summarize list of numbers",
    "test"
  ],
  [
    "tail tail,tail",
    "test-file/test/tail.spec.ts.html#lineNumber6",
    "tail",
    "test"
  ],
  [
    "",
    "test-file/test/tail.spec.ts.html#lineNumber7",
    "tail should return the tail of a list",
    "test"
  ],
  [
    "",
    "test-file/test/tail.spec.ts.html#lineNumber18",
    "tail should return the tail of a string",
    "test"
  ],
  [
    "",
    "test-file/test/tail.spec.ts.html#lineNumber14",
    "tail should return undefined on an empty list",
    "test"
  ],
  [
    "",
    "test-file/test/tail.spec.ts.html#lineNumber24",
    "tail should return undefined on an empty string",
    "test"
  ],
  [
    "takewhile takewhile,takewhile",
    "test-file/test/takeWhile.spec.ts.html#lineNumber5",
    "takeWhile",
    "test"
  ],
  [
    "",
    "test-file/test/takeWhile.spec.ts.html#lineNumber6",
    "takeWhile should return the elements that satisfies the provided predicate function",
    "test"
  ],
  [
    "test/compose.spec.ts",
    "test-file/test/compose.spec.ts.html",
    "test/compose.spec.ts",
    "testFile"
  ],
  [
    "test/concat.spec.ts",
    "test-file/test/concat.spec.ts.html",
    "test/concat.spec.ts",
    "testFile"
  ],
  [
    "test/concatmap.spec.ts",
    "test-file/test/concatMap.spec.ts.html",
    "test/concatMap.spec.ts",
    "testFile"
  ],
  [
    "test/curry.spec.ts",
    "test-file/test/curry.spec.ts.html",
    "test/curry.spec.ts",
    "testFile"
  ],
  [
    "test/curryn.spec.ts",
    "test-file/test/curryN.spec.ts.html",
    "test/curryN.spec.ts",
    "testFile"
  ],
  [
    "test/dropwhile.spec.ts",
    "test-file/test/dropWhile.spec.ts.html",
    "test/dropWhile.spec.ts",
    "testFile"
  ],
  [
    "test/flip.spec.ts",
    "test-file/test/flip.spec.ts.html",
    "test/flip.spec.ts",
    "testFile"
  ],
  [
    "test/foldl.spec.ts",
    "test-file/test/foldl.spec.ts.html",
    "test/foldl.spec.ts",
    "testFile"
  ],
  [
    "test/head.spec.ts",
    "test-file/test/head.spec.ts.html",
    "test/head.spec.ts",
    "testFile"
  ],
  [
    "test/init.spec.ts",
    "test-file/test/init.spec.ts.html",
    "test/init.spec.ts",
    "testFile"
  ],
  [
    "test/intersperse.spec.ts",
    "test-file/test/intersperse.spec.ts.html",
    "test/intersperse.spec.ts",
    "testFile"
  ],
  [
    "test/last.spec.ts",
    "test-file/test/last.spec.ts.html",
    "test/last.spec.ts",
    "testFile"
  ],
  [
    "test/maximum.spec.ts",
    "test-file/test/maximum.spec.ts.html",
    "test/maximum.spec.ts",
    "testFile"
  ],
  [
    "test/minimum.spec.ts",
    "test-file/test/minimum.spec.ts.html",
    "test/minimum.spec.ts",
    "testFile"
  ],
  [
    "test/nullaware.spec.ts",
    "test-file/test/nullAware.spec.ts.html",
    "test/nullAware.spec.ts",
    "testFile"
  ],
  [
    "test/product.spec.ts",
    "test-file/test/product.spec.ts.html",
    "test/product.spec.ts",
    "testFile"
  ],
  [
    "test/range.spec.ts",
    "test-file/test/range.spec.ts.html",
    "test/range.spec.ts",
    "testFile"
  ],
  [
    "test/splitat.spec.ts",
    "test-file/test/splitAt.spec.ts.html",
    "test/splitAt.spec.ts",
    "testFile"
  ],
  [
    "test/sum.spec.ts",
    "test-file/test/sum.spec.ts.html",
    "test/sum.spec.ts",
    "testFile"
  ],
  [
    "test/tail.spec.ts",
    "test-file/test/tail.spec.ts.html",
    "test/tail.spec.ts",
    "testFile"
  ],
  [
    "test/takewhile.spec.ts",
    "test-file/test/takeWhile.spec.ts.html",
    "test/takeWhile.spec.ts",
    "testFile"
  ],
  [
    "test/transpose.spec.ts",
    "test-file/test/transpose.spec.ts.html",
    "test/transpose.spec.ts",
    "testFile"
  ],
  [
    "test/uncons.spec.ts",
    "test-file/test/uncons.spec.ts.html",
    "test/uncons.spec.ts",
    "testFile"
  ],
  [
    "test/zip.spec.ts",
    "test-file/test/zip.spec.ts.html",
    "test/zip.spec.ts",
    "testFile"
  ],
  [
    "transpose transpose,transpose",
    "test-file/test/transpose.spec.ts.html#lineNumber5",
    "transpose",
    "test"
  ],
  [
    "",
    "test-file/test/transpose.spec.ts.html#lineNumber10",
    "transpose should transpose if some rows are shorter than the others and skip them",
    "test"
  ],
  [
    "",
    "test-file/test/transpose.spec.ts.html#lineNumber6",
    "transpose should transpose the rows and the columns",
    "test"
  ],
  [
    "uncons uncons,uncons",
    "test-file/test/uncons.spec.ts.html#lineNumber6",
    "uncons",
    "test"
  ],
  [
    "",
    "test-file/test/uncons.spec.ts.html#lineNumber7",
    "uncons should decompose a list into its head and tail",
    "test"
  ],
  [
    "",
    "test-file/test/uncons.spec.ts.html#lineNumber18",
    "uncons should decompose a string into its head and tail",
    "test"
  ],
  [
    "",
    "test-file/test/uncons.spec.ts.html#lineNumber14",
    "uncons should return undefined on an empty list",
    "test"
  ],
  [
    "",
    "test-file/test/uncons.spec.ts.html#lineNumber24",
    "uncons should return undefined on an empty string",
    "test"
  ],
  [
    "zip zip,zip",
    "test-file/test/zip.spec.ts.html#lineNumber5",
    "zip",
    "test"
  ],
  [
    "",
    "test-file/test/zip.spec.ts.html#lineNumber10",
    "zip should apply combinerFunction if provided",
    "test"
  ],
  [
    "",
    "test-file/test/zip.spec.ts.html#lineNumber6",
    "zip should return the first item in each array in one array and the second in another",
    "test"
  ]
]