{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "Literal",
        "value": "use strict",
        "raw": "'use strict'",
        "range": [
          0,
          12
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 12
          }
        }
      },
      "range": [
        0,
        13
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 13
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "Object",
            "range": [
              15,
              21
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 3,
                "column": 6
              }
            }
          },
          "property": {
            "type": "Identifier",
            "name": "defineProperty",
            "range": [
              22,
              36
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 7
              },
              "end": {
                "line": 3,
                "column": 21
              }
            }
          },
          "range": [
            15,
            36
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 3,
              "column": 21
            }
          }
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "exports",
            "range": [
              37,
              44
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 22
              },
              "end": {
                "line": 3,
                "column": 29
              }
            }
          },
          {
            "type": "Literal",
            "value": "__esModule",
            "raw": "\"__esModule\"",
            "range": [
              46,
              58
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 31
              },
              "end": {
                "line": 3,
                "column": 43
              }
            }
          },
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "value",
                  "range": [
                    64,
                    69
                  ],
                  "loc": {
                    "start": {
                      "line": 4,
                      "column": 2
                    },
                    "end": {
                      "line": 4,
                      "column": 7
                    }
                  }
                },
                "value": {
                  "type": "Literal",
                  "value": true,
                  "raw": "true",
                  "range": [
                    71,
                    75
                  ],
                  "loc": {
                    "start": {
                      "line": 4,
                      "column": 9
                    },
                    "end": {
                      "line": 4,
                      "column": 13
                    }
                  }
                },
                "kind": "init",
                "method": false,
                "shorthand": false,
                "computed": false,
                "range": [
                  64,
                  75
                ],
                "loc": {
                  "start": {
                    "line": 4,
                    "column": 2
                  },
                  "end": {
                    "line": 4,
                    "column": 13
                  }
                }
              }
            ],
            "range": [
              60,
              77
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 45
              },
              "end": {
                "line": 5,
                "column": 1
              }
            }
          }
        ],
        "range": [
          15,
          78
        ],
        "loc": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 2
          }
        }
      },
      "range": [
        15,
        79
      ],
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 5,
          "column": 3
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "exports",
            "range": [
              80,
              87
            ],
            "loc": {
              "start": {
                "line": 6,
                "column": 0
              },
              "end": {
                "line": 6,
                "column": 7
              }
            }
          },
          "property": {
            "type": "Identifier",
            "name": "nullAware",
            "range": [
              88,
              97
            ],
            "loc": {
              "start": {
                "line": 6,
                "column": 8
              },
              "end": {
                "line": 6,
                "column": 17
              }
            }
          },
          "range": [
            80,
            97
          ],
          "loc": {
            "start": {
              "line": 6,
              "column": 0
            },
            "end": {
              "line": 6,
              "column": 17
            }
          }
        },
        "right": {
          "type": "Identifier",
          "name": "nullAware",
          "range": [
            100,
            109
          ],
          "loc": {
            "start": {
              "line": 6,
              "column": 20
            },
            "end": {
              "line": 6,
              "column": 29
            }
          }
        },
        "range": [
          80,
          109
        ],
        "loc": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 29
          }
        }
      },
      "range": [
        80,
        110
      ],
      "loc": {
        "start": {
          "line": 6,
          "column": 0
        },
        "end": {
          "line": 6,
          "column": 30
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Checks whenever a value is null or undefined and if it is, then it replaces\n * the null value it with a given replaceValue. If the value is not null\n * or undefined it will just return the supposed to be null value, that is the\n * first parameter.\n *\n * @since v0.1.0\n * @param {any} value - The value to be checked\n * @param {any} replaceValue - The value that should be returned if the first\n * param is null or undefined\n * @return {any} Either value or replaceValue\n * @example\n *   let x = null\n *   x = nullAware(x, 'are null-aware, friendly to') // => 'are null-aware, friendly to'\n ",
          "range": [
            111,
            710
          ],
          "loc": {
            "start": {
              "line": 7,
              "column": 0
            },
            "end": {
              "line": 21,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "nullAware",
        "range": [
          720,
          729
        ],
        "loc": {
          "start": {
            "line": 22,
            "column": 9
          },
          "end": {
            "line": 22,
            "column": 18
          }
        }
      },
      "params": [
        {
          "type": "Identifier",
          "name": "value",
          "range": [
            730,
            735
          ],
          "loc": {
            "start": {
              "line": 22,
              "column": 19
            },
            "end": {
              "line": 22,
              "column": 24
            }
          }
        },
        {
          "type": "Identifier",
          "name": "replaceValue",
          "range": [
            737,
            749
          ],
          "loc": {
            "start": {
              "line": 22,
              "column": 26
            },
            "end": {
              "line": 22,
              "column": 38
            }
          }
        }
      ],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "ConditionalExpression",
              "test": {
                "type": "LogicalExpression",
                "operator": "||",
                "left": {
                  "type": "BinaryExpression",
                  "operator": "===",
                  "left": {
                    "type": "Identifier",
                    "name": "value",
                    "range": [
                      762,
                      767
                    ],
                    "loc": {
                      "start": {
                        "line": 23,
                        "column": 9
                      },
                      "end": {
                        "line": 23,
                        "column": 14
                      }
                    }
                  },
                  "right": {
                    "type": "Literal",
                    "value": null,
                    "raw": "null",
                    "range": [
                      772,
                      776
                    ],
                    "loc": {
                      "start": {
                        "line": 23,
                        "column": 19
                      },
                      "end": {
                        "line": 23,
                        "column": 23
                      }
                    }
                  },
                  "range": [
                    762,
                    776
                  ],
                  "loc": {
                    "start": {
                      "line": 23,
                      "column": 9
                    },
                    "end": {
                      "line": 23,
                      "column": 23
                    }
                  }
                },
                "right": {
                  "type": "BinaryExpression",
                  "operator": "===",
                  "left": {
                    "type": "UnaryExpression",
                    "operator": "typeof",
                    "argument": {
                      "type": "Identifier",
                      "name": "value",
                      "range": [
                        787,
                        792
                      ],
                      "loc": {
                        "start": {
                          "line": 23,
                          "column": 34
                        },
                        "end": {
                          "line": 23,
                          "column": 39
                        }
                      }
                    },
                    "prefix": true,
                    "range": [
                      780,
                      792
                    ],
                    "loc": {
                      "start": {
                        "line": 23,
                        "column": 27
                      },
                      "end": {
                        "line": 23,
                        "column": 39
                      }
                    }
                  },
                  "right": {
                    "type": "Literal",
                    "value": "undefined",
                    "raw": "'undefined'",
                    "range": [
                      797,
                      808
                    ],
                    "loc": {
                      "start": {
                        "line": 23,
                        "column": 44
                      },
                      "end": {
                        "line": 23,
                        "column": 55
                      }
                    }
                  },
                  "range": [
                    780,
                    808
                  ],
                  "loc": {
                    "start": {
                      "line": 23,
                      "column": 27
                    },
                    "end": {
                      "line": 23,
                      "column": 55
                    }
                  }
                },
                "range": [
                  762,
                  808
                ],
                "loc": {
                  "start": {
                    "line": 23,
                    "column": 9
                  },
                  "end": {
                    "line": 23,
                    "column": 55
                  }
                }
              },
              "consequent": {
                "type": "Identifier",
                "name": "replaceValue",
                "range": [
                  811,
                  823
                ],
                "loc": {
                  "start": {
                    "line": 23,
                    "column": 58
                  },
                  "end": {
                    "line": 23,
                    "column": 70
                  }
                }
              },
              "alternate": {
                "type": "Identifier",
                "name": "value",
                "range": [
                  826,
                  831
                ],
                "loc": {
                  "start": {
                    "line": 23,
                    "column": 73
                  },
                  "end": {
                    "line": 23,
                    "column": 78
                  }
                }
              },
              "range": [
                762,
                831
              ],
              "loc": {
                "start": {
                  "line": 23,
                  "column": 9
                },
                "end": {
                  "line": 23,
                  "column": 78
                }
              }
            },
            "range": [
              755,
              832
            ],
            "loc": {
              "start": {
                "line": 23,
                "column": 2
              },
              "end": {
                "line": 23,
                "column": 79
              }
            }
          }
        ],
        "range": [
          751,
          834
        ],
        "loc": {
          "start": {
            "line": 22,
            "column": 40
          },
          "end": {
            "line": 24,
            "column": 1
          }
        }
      },
      "generator": false,
      "expression": false,
      "range": [
        711,
        834
      ],
      "loc": {
        "start": {
          "line": 22,
          "column": 0
        },
        "end": {
          "line": 24,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Checks whenever a value is null or undefined and if it is, then it replaces\n * the null value it with a given replaceValue. If the value is not null\n * or undefined it will just return the supposed to be null value, that is the\n * first parameter.\n *\n * @since v0.1.0\n * @param {any} value - The value to be checked\n * @param {any} replaceValue - The value that should be returned if the first\n * param is null or undefined\n * @return {any} Either value or replaceValue\n * @example\n *   let x = null\n *   x = nullAware(x, 'are null-aware, friendly to') // => 'are null-aware, friendly to'\n ",
          "range": [
            111,
            710
          ],
          "loc": {
            "start": {
              "line": 7,
              "column": 0
            },
            "end": {
              "line": 21,
              "column": 3
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    834
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 24,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * Checks whenever a value is null or undefined and if it is, then it replaces\n * the null value it with a given replaceValue. If the value is not null\n * or undefined it will just return the supposed to be null value, that is the\n * first parameter.\n *\n * @since v0.1.0\n * @param {any} value - The value to be checked\n * @param {any} replaceValue - The value that should be returned if the first\n * param is null or undefined\n * @return {any} Either value or replaceValue\n * @example\n *   let x = null\n *   x = nullAware(x, 'are null-aware, friendly to') // => 'are null-aware, friendly to'\n ",
      "range": [
        111,
        710
      ],
      "loc": {
        "start": {
          "line": 7,
          "column": 0
        },
        "end": {
          "line": 21,
          "column": 3
        }
      }
    }
  ]
}